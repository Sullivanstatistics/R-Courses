library(slidify)
author("Course Notes")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
install.packages("DiagrammeR")
install.packages("DiagrammeR")
slidify("index.Rmd")
install.packages("webshot")
slidify("index.Rmd")
webshot::install_phantomjs()
?mermaid
library(DiagrammeR)
DiagrammeR("
graph LR
A-->B
A-->C
C-->E
B-->D
C-->D
D-->F
E-->F
")
library(DiagrammeR)
mermaid("
graph LR
A-->B
")
library(DiagrammeR)
create_random_graph(140, 100, set_seed = 23) %>%
join_node_attrs(get_w_connected_cmpts(.)) %>%
select_nodes_by_id(get_articulation_points(.)) %>%
set_node_attrs_ws("peripheries", 2) %>%
set_node_attrs_ws("width", 0.65) %>%
set_node_attrs_ws("height", 0.65) %>%
set_node_attrs_ws("penwidth", 3) %>%
clear_selection() %>%
add_global_graph_attrs(
attr =
c("color",  "penwidth", "width", "height"),
value =
c("gray80", "3",        "0.5",   "0.5"),
attr_type =
c("edge",   "edge",     "node",  "node")) %>%
colorize_node_attrs(
node_attr_from = "wc_component",
node_attr_to = "fillcolor",
alpha = 80) %>%
set_node_attr_to_display() %>%
select_nodes_by_degree("deg >= 3") %>%
trav_both_edge() %>%
set_edge_attrs_ws("penwidth", 4) %>%
set_edge_attrs_ws("color", "gray60") %>%
clear_selection() %>%
render_graph()
library(DiagrammeR)
grViz("
digraph {
layout = twopi
node [shape = ]
A -> {B C D}
}")
library(DiagrammeR)
grViz("
digraph {
layout = twopi
node [shape = rectangle]
A -> {B C D}
}")
library(DiagrammeR)
grViz("
digraph {
layout = twopi
node [shape = none]
A -> {B C D}
}")
library(DiagrammeR)
mermaid("
digraph {
layout = twopi
node [shape = none]
A -> {B C D}
}")
library(DiagrammeR)
mermaid("
graph LR
A-->B
")
library(DiagrammeR)
mermaid("
node [shape = none]
graph LR
A-->B
")
library(DiagrammeR)
# Create a simple NDF
nodes <-
create_nodes(
nodes = 1:4,
type = "number")
# Create a simple EDF
edges <-
create_edges(
from = c(1, 1, 3, 1),
to = c(2, 3, 4, 4),
rel = "related")
# Create the graph object,
# incorporating the NDF and
# the EDF, and, providing
# some global attributes
graph <-
create_graph(
nodes_df = nodes,
edges_df = edges,
graph_attrs = "layout = neato",
node_attrs = "fontname = Helvetica",
edge_attrs = "color = gray20")
# View the graph
render_graph(graph)
graph <- create_graph(
nodes_df = nodes,
edges_df = edges,
graph_attrs = "layout = neato",
node_attrs = "fontname = Helvetica",
edge_attrs = "color = gray20")
library(DiagrammeR)
# Create a simple NDF
nodes <-   create_nodes(
nodes = 1:4,
type = "number")
# Create a simple EDF
edges <-   create_edges(
from = c(1, 1, 3, 1),
to = c(2, 3, 4, 4),
rel = "related")
# Create the graph object,
# incorporating the NDF and
# the EDF, and, providing
# some global attributes
graph <- create_graph(
nodes_df = nodes,
edges_df = edges,
graph_attrs = "layout = neato",
node_attrs = "fontname = Helvetica",
edge_attrs = "color = gray20")
# View the graph
render_graph(graph)
nodes <-   create_nodes(
nodes = 1:4,
type = "number")
library(DiagrammeR)
# Create a simple NDF
nodes <-   create_nodes(
nodes = 1:4,
type = "number")
library(DiagrammeR)
digraph {
graph [rankdir=LR] // left-right layout, not top-down
a [shape=square, fontcolor=white, style=filled, fillcolor=blue]
b [shape=triangle, fontcolor=white, style=filled,
fillcolor=red, peripheries=3]
c [style=invis]
a -> b [style=bold, color=red, label="to b"]
b -> a [style=dashed, color=blue, label="to a"]
library(DiagrammeR)
library(magrittr)
# Create a graph
graph <-
create_graph() %>%
set_global_graph_attr("graph", "rankdir", "LR") %>%
add_node("A") %>% add_node("B") %>% add_node("C") %>%
add_node("D") %>% add_node("E") %>% add_node("F") %>%
add_node("1") %>% add_node("2") %>% add_node("3") %>%
add_node("4") %>% add_node("5") %>% add_node("6") %>%
add_node("7") %>% add_node("8") %>%
add_edge("A", "1") %>%
add_edge("B", "2") %>%
add_edge("B", "3") %>%
add_edge("B", "4") %>%
add_edge("C", "A") %>%
add_edge("1", "D") %>%
add_edge("E", "A") %>%
add_edge("2", "4") %>%
add_edge("1", "5") %>%
add_edge("1", "F") %>%
add_edge("E", "6") %>%
add_edge("4", "6") %>%
add_edge("5", "7") %>%
add_edge("6", "7") %>%
add_edge("3", "8")
render_graph(graph)
graph <-
create_graph() %>%
set_global_graph_attr("graph", "rankdir", "LR") %>%
add_node("A") %>% add_node("B") %>% add_node("C") %>%
add_node("D") %>% add_node("E") %>% add_node("F") %>%
add_node("1") %>% add_node("2") %>% add_node("3") %>%
add_node("4") %>% add_node("5") %>% add_node("6") %>%
add_node("7") %>% add_node("8") %>%
add_edge("A", "1") %>%
add_edge("B", "2") %>%
add_edge("B", "3") %>%
add_edge("B", "4") %>%
add_edge("C", "A") %>%
add_edge("1", "D") %>%
add_edge("E", "A") %>%
add_edge("2", "4") %>%
add_edge("1", "5") %>%
add_edge("1", "F") %>%
add_edge("E", "6") %>%
add_edge("4", "6") %>%
add_edge("5", "7") %>%
add_edge("6", "7") %>%
add_edge("3", "8")
devtools::install_github("rich-iannone/DiagrammeR")
library(DiagrammeR)
library(magrittr)
# Create a graph
graph <-
create_graph() %>%
set_global_graph_attr("graph", "rankdir", "LR") %>%
add_node("A") %>% add_node("B") %>% add_node("C") %>%
add_node("D") %>% add_node("E") %>% add_node("F") %>%
add_node("1") %>% add_node("2") %>% add_node("3") %>%
add_node("4") %>% add_node("5") %>% add_node("6") %>%
add_node("7") %>% add_node("8") %>%
add_edge("A", "1") %>%
add_edge("B", "2") %>%
add_edge("B", "3") %>%
add_edge("B", "4") %>%
add_edge("C", "A") %>%
add_edge("1", "D") %>%
add_edge("E", "A") %>%
add_edge("2", "4") %>%
add_edge("1", "5") %>%
add_edge("1", "F") %>%
add_edge("E", "6") %>%
add_edge("4", "6") %>%
add_edge("5", "7") %>%
add_edge("6", "7") %>%
add_edge("3", "8")
render_graph(graph)
library(DiagrammeR)
mermaid("
graph LR;
A-->B;
click A callback "Tooltip for a callback"
click B "http://www.github.com" "This is a tooltip for a link"
")
library(DiagrammeR)
mermaid("
graph LR;
A-->B;
")
library(DiagrammeR)
mermaid("
graph LR
A-->B
")
library(DiagrammeR)
mermaid("
graph LR
A-->B
")
)
))))
