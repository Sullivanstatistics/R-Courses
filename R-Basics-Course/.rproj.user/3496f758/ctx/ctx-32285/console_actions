{
    "data" : [
        "\nR version 3.3.1 (2016-06-21) -- \"Bug in Your Hair\"\nCopyright (C) 2016 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(slidify)",
        "> ",
        "author(\"Course Notes\")",
        "Creating slide directory at Course Notes...\n",
        "Copying files to Course Notes...\n",
        "Finished creating slide directory...\n",
        "Switching to slide directory...\n",
        "Initializing Git Repo\n",
        "Initialized empty Git repository in C:/Users/adam_/Dropbox/Brown/R-Basics-Course/Course Notes/.git/\nerror: pathspec 'Commit'' did not match any file(s) known to git.\n",
        "Checking out gh-pages branch...\n",
        "Switched to a new branch 'gh-pages'\n",
        "Adding .nojekyll to repo\n",
        "Opening slide deck...\n",
        "Warning message:\n",
        "running command 'git commit --allow-empty -m 'Initial Commit'' had status 1 \n",
        "Copying files to libraries/frameworks/io2012...\n",
        "Copying files to libraries/highlighters/highlight.js...\n",
        "Copying files to libraries/widgets/mathjax...\n",
        "Copying files to libraries/widgets/quiz...\n",
        "Copying files to libraries/widgets/bootstrap...\n",
        "Copying files to libraries/widgets/interactive...\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "install.packages(\"DiagrammeR\")",
        "Installing package into ‘C:/Users/adam_/Documents/R/win-library/3.3’\n(as ‘lib’ is unspecified)\n",
        "also installing the dependencies ‘brew’, ‘Rook’, ‘influenceR’, ‘rgexf’, ‘visNetwork’\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/brew_1.0-6.zip'\n",
        "Content type 'application/zip'",
        " length 104741 bytes (102 KB)\n",
        "downloaded 102 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/Rook_1.1-1.zip'\n",
        "Content type 'application/zip'",
        " length 280127 bytes (273 KB)\n",
        "downloaded 273 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/influenceR_0.1.0.zip'\n",
        "Content type 'application/zip'",
        " length 55546 bytes (54 KB)\n",
        "downloaded 54 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/rgexf_0.15.3.zip'\n",
        "Content type 'application/zip'",
        " length 517620 bytes (505 KB)\n",
        "downloaded 505 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/visNetwork_1.0.3.zip'\n",
        "Content type 'application/zip'",
        " length 2664764 bytes (2.5 MB)\n",
        "downloaded 2.5 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/DiagrammeR_0.9.0.zip'\n",
        "Content type 'application/zip'",
        " length 4589579 bytes (4.4 MB)\n",
        "downloaded 4.4 MB\n\n",
        "package ‘brew’ successfully unpacked and MD5 sums checked\npackage ‘Rook’ successfully unpacked and MD5 sums checked\npackage ‘influenceR’ successfully unpacked and MD5 sums checked\npackage ‘rgexf’ successfully unpacked and MD5 sums checked\npackage ‘visNetwork’ successfully unpacked and MD5 sums checked\npackage ‘DiagrammeR’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\adam_\\AppData\\Local\\Temp\\RtmpaGG0n7\\downloaded_packages\n",
        "> ",
        "install.packages(\"DiagrammeR\")",
        "Installing package into ‘C:/Users/adam_/Documents/R/win-library/3.3’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/DiagrammeR_0.9.0.zip'\n",
        "Content type 'application/zip'",
        " length 4589579 bytes (4.4 MB)\n",
        "downloaded 4.4 MB\n\n",
        "package ‘DiagrammeR’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\adam_\\AppData\\Local\\Temp\\RtmpaGG0n7\\downloaded_packages\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |......................                                           |  33%\n  ordinary text without R code\n\n\r  |                                                                       \r  |...........................................                      |  67%\nlabel: unnamed-chunk-1\n\r  |                                                                       ",
        "\r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "install.packages(\"webshot\")",
        "Installing package into ‘C:/Users/adam_/Documents/R/win-library/3.3’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/webshot_0.4.0.zip'\n",
        "Content type 'application/zip'",
        " length 1101108 bytes (1.1 MB)\n",
        "downloaded 1.1 MB\n\n",
        "package ‘webshot’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\adam_\\AppData\\Local\\Temp\\RtmpaGG0n7\\downloaded_packages\n",
        "> ",
        "slidify(\"index.Rmd\")",
        "\n\nprocessing file: index.Rmd\n",
        "\r  |                                                                       \r  |                                                                 |   0%\r  |                                                                       \r  |......................                                           |  33%\n  ordinary text without R code\n\n\r  |                                                                       \r  |...........................................                      |  67%\nlabel: unnamed-chunk-1\n\r  |                                                                       ",
        "\r  |.................................................................| 100%\n  ordinary text without R code\n\n\n",
        "output file: index.md\n\n",
        "> ",
        "webshot::install_phantomjs()",
        "trying URL 'https://github.com/wch/webshot/releases/download/v0.3.1/phantomjs-2.1.1-windows.zip'\n",
        "Content type 'application/octet-stream'",
        " length 18193653 bytes (17.4 MB)\n",
        "downloaded 17.4 MB\n\n",
        "phantomjs has been installed to C:\\Users\\adam_\\AppData\\Roaming\\PhantomJS\n",
        "> ",
        "?mermaid",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "DiagrammeR(\"",
        "+ ",
        "  graph LR",
        "+ ",
        "    A-->B",
        "+ ",
        "    A-->C",
        "+ ",
        "    C-->E",
        "+ ",
        "    B-->D",
        "+ ",
        "    C-->D",
        "+ ",
        "    D-->F",
        "+ ",
        "    E-->F",
        "+ ",
        "\")",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "mermaid(\"",
        "+ ",
        "graph LR",
        "+ ",
        "    A-->B",
        "+ ",
        "\")",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "",
        "> ",
        "create_random_graph(140, 100, set_seed = 23) %>%",
        "+ ",
        "  join_node_attrs(get_w_connected_cmpts(.)) %>%",
        "+ ",
        "  select_nodes_by_id(get_articulation_points(.)) %>%",
        "+ ",
        "  set_node_attrs_ws(\"peripheries\", 2) %>%",
        "+ ",
        "  set_node_attrs_ws(\"width\", 0.65) %>%",
        "+ ",
        "  set_node_attrs_ws(\"height\", 0.65) %>%",
        "+ ",
        "  set_node_attrs_ws(\"penwidth\", 3) %>%",
        "+ ",
        "  clear_selection() %>%",
        "+ ",
        "  add_global_graph_attrs(",
        "+ ",
        "    attr =",
        "+ ",
        "      c(\"color\",  \"penwidth\", \"width\", \"height\"),",
        "+ ",
        "    value =",
        "+ ",
        "      c(\"gray80\", \"3\",        \"0.5\",   \"0.5\"),",
        "+ ",
        "    attr_type =",
        "+ ",
        "      c(\"edge\",   \"edge\",     \"node\",  \"node\")) %>%",
        "+ ",
        "  colorize_node_attrs(",
        "+ ",
        "    node_attr_from = \"wc_component\",",
        "+ ",
        "    node_attr_to = \"fillcolor\",",
        "+ ",
        "    alpha = 80) %>%",
        "+ ",
        "  set_node_attr_to_display() %>%",
        "+ ",
        "  select_nodes_by_degree(\"deg >= 3\") %>%",
        "+ ",
        "  trav_both_edge() %>%",
        "+ ",
        "  set_edge_attrs_ws(\"penwidth\", 4) %>%",
        "+ ",
        "  set_edge_attrs_ws(\"color\", \"gray60\") %>%",
        "+ ",
        "  clear_selection() %>%",
        "+ ",
        "  render_graph()",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "grViz(\"",
        "+ ",
        "      digraph {",
        "+ ",
        "      layout = twopi",
        "+ ",
        "      node [shape = ]",
        "+ ",
        "      A -> {B C D} ",
        "+ ",
        "      }\")",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "grViz(\"",
        "+ ",
        "      digraph {",
        "+ ",
        "      layout = twopi",
        "+ ",
        "      node [shape = rectangle]",
        "+ ",
        "      A -> {B C D} ",
        "+ ",
        "      }\")",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "grViz(\"",
        "+ ",
        "      digraph {",
        "+ ",
        "      layout = twopi",
        "+ ",
        "      node [shape = none]",
        "+ ",
        "      A -> {B C D} ",
        "+ ",
        "      }\")",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "mermaid(\"",
        "+ ",
        "      digraph {",
        "+ ",
        "      layout = twopi",
        "+ ",
        "      node [shape = none]",
        "+ ",
        "      A -> {B C D} ",
        "+ ",
        "      }\")",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "mermaid(\"",
        "+ ",
        "graph LR",
        "+ ",
        "        A-->B",
        "+ ",
        "        \")",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "mermaid(\"",
        "+ ",
        "node [shape = none]",
        "+ ",
        "graph LR",
        "+ ",
        "        A-->B",
        "+ ",
        "        \")",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "",
        "> ",
        "# Create a simple NDF",
        "> ",
        "nodes <-",
        "+ ",
        "  create_nodes(",
        "+ ",
        "    nodes = 1:4,",
        "+ ",
        "    type = \"number\")",
        "Error: could not find function \"create_nodes\"\n",
        "> ",
        "",
        "> ",
        "# Create a simple EDF",
        "> ",
        "edges <-",
        "+ ",
        "  create_edges(",
        "+ ",
        "    from = c(1, 1, 3, 1),",
        "+ ",
        "    to = c(2, 3, 4, 4),",
        "+ ",
        "    rel = \"related\")",
        "Error: could not find function \"create_edges\"\n",
        "> ",
        "",
        "> ",
        "# Create the graph object,",
        "> ",
        "# incorporating the NDF and",
        "> ",
        "# the EDF, and, providing",
        "> ",
        "# some global attributes",
        "> ",
        "graph <-",
        "+ ",
        "  create_graph(",
        "+ ",
        "    nodes_df = nodes,",
        "+ ",
        "    edges_df = edges,",
        "+ ",
        "    graph_attrs = \"layout = neato\",",
        "+ ",
        "    node_attrs = \"fontname = Helvetica\",",
        "+ ",
        "    edge_attrs = \"color = gray20\")",
        "Error in create_graph(nodes_df = nodes, edges_df = edges, graph_attrs = \"layout = neato\",  : \n  unused arguments (graph_attrs = \"layout = neato\", node_attrs = \"fontname = Helvetica\", edge_attrs = \"color = gray20\")\n",
        "> ",
        "",
        "> ",
        "# View the graph",
        "> ",
        "render_graph(graph)",
        "Error in match(x, table, nomatch = 0L) : object 'graph' not found\n",
        "> ",
        "graph <- create_graph(",
        "+ ",
        "    nodes_df = nodes,",
        "+ ",
        "    edges_df = edges,",
        "+ ",
        "    graph_attrs = \"layout = neato\",",
        "+ ",
        "    node_attrs = \"fontname = Helvetica\",",
        "+ ",
        "    edge_attrs = \"color = gray20\")",
        "Error in create_graph(nodes_df = nodes, edges_df = edges, graph_attrs = \"layout = neato\",  : \n  unused arguments (graph_attrs = \"layout = neato\", node_attrs = \"fontname = Helvetica\", edge_attrs = \"color = gray20\")\n",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "",
        "> ",
        "# Create a simple NDF",
        "> ",
        "nodes <-   create_nodes(",
        "+ ",
        "    nodes = 1:4,",
        "+ ",
        "    type = \"number\")",
        "Error: could not find function \"create_nodes\"\n",
        "> ",
        "",
        "> ",
        "# Create a simple EDF",
        "> ",
        "edges <-   create_edges(",
        "+ ",
        "    from = c(1, 1, 3, 1),",
        "+ ",
        "    to = c(2, 3, 4, 4),",
        "+ ",
        "    rel = \"related\")",
        "Error: could not find function \"create_edges\"\n",
        "> ",
        "",
        "> ",
        "# Create the graph object,",
        "> ",
        "# incorporating the NDF and",
        "> ",
        "# the EDF, and, providing",
        "> ",
        "# some global attributes",
        "> ",
        "graph <- create_graph(",
        "+ ",
        "    nodes_df = nodes,",
        "+ ",
        "    edges_df = edges,",
        "+ ",
        "    graph_attrs = \"layout = neato\",",
        "+ ",
        "    node_attrs = \"fontname = Helvetica\",",
        "+ ",
        "    edge_attrs = \"color = gray20\")",
        "Error in create_graph(nodes_df = nodes, edges_df = edges, graph_attrs = \"layout = neato\",  : \n  unused arguments (graph_attrs = \"layout = neato\", node_attrs = \"fontname = Helvetica\", edge_attrs = \"color = gray20\")\n",
        "> ",
        "",
        "> ",
        "# View the graph",
        "> ",
        "render_graph(graph)",
        "Error in match(x, table, nomatch = 0L) : object 'graph' not found\n",
        "> ",
        "nodes <-   create_nodes(",
        "+ ",
        "    nodes = 1:4,",
        "+ ",
        "    type = \"number\")",
        "Error: could not find function \"create_nodes\"\n",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "# Create a simple NDF",
        "> ",
        "nodes <-   create_nodes(",
        "+ ",
        "    nodes = 1:4,",
        "+ ",
        "    type = \"number\")",
        "Error: could not find function \"create_nodes\"\n",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "digraph {",
        "Error: unexpected '{' in \"digraph {\"\n",
        "> ",
        "  graph [rankdir=LR] // left-right layout, not top-down",
        "Error: unexpected '/' in \"  graph [rankdir=LR] //\"\n",
        "> ",
        "  a [shape=square, fontcolor=white, style=filled, fillcolor=blue]",
        "Error: object 'a' not found\n",
        "> ",
        "  b [shape=triangle, fontcolor=white, style=filled,",
        "+ ",
        "     fillcolor=red, peripheries=3]",
        "Error: object 'b' not found\n",
        "> ",
        "  c [style=invis]",
        "Error: object 'invis' not found\n",
        "> ",
        "  a -> b [style=bold, color=red, label=\"to b\"]",
        "Error: object 'a' not found\n",
        "> ",
        "  b -> a [style=dashed, color=blue, label=\"to a\"]",
        "Error: object 'b' not found\n",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "library(magrittr)",
        "> ",
        "",
        "> ",
        "# Create a graph",
        "> ",
        "graph <-",
        "+ ",
        "  create_graph() %>%",
        "+ ",
        "  set_global_graph_attr(\"graph\", \"rankdir\", \"LR\") %>%",
        "+ ",
        "  add_node(\"A\") %>% add_node(\"B\") %>% add_node(\"C\") %>%",
        "+ ",
        "  add_node(\"D\") %>% add_node(\"E\") %>% add_node(\"F\") %>%",
        "+ ",
        "  add_node(\"1\") %>% add_node(\"2\") %>% add_node(\"3\") %>%",
        "+ ",
        "  add_node(\"4\") %>% add_node(\"5\") %>% add_node(\"6\") %>%",
        "+ ",
        "  add_node(\"7\") %>% add_node(\"8\") %>%",
        "+ ",
        "  add_edge(\"A\", \"1\") %>%",
        "+ ",
        "  add_edge(\"B\", \"2\") %>%",
        "+ ",
        "  add_edge(\"B\", \"3\") %>%",
        "+ ",
        "  add_edge(\"B\", \"4\") %>%",
        "+ ",
        "  add_edge(\"C\", \"A\") %>%",
        "+ ",
        "  add_edge(\"1\", \"D\") %>%",
        "+ ",
        "  add_edge(\"E\", \"A\") %>%",
        "+ ",
        "  add_edge(\"2\", \"4\") %>%",
        "+ ",
        "  add_edge(\"1\", \"5\") %>%",
        "+ ",
        "  add_edge(\"1\", \"F\") %>%",
        "+ ",
        "  add_edge(\"E\", \"6\") %>%",
        "+ ",
        "  add_edge(\"4\", \"6\") %>%",
        "+ ",
        "  add_edge(\"5\", \"7\") %>%",
        "+ ",
        "  add_edge(\"6\", \"7\") %>%",
        "+ ",
        "  add_edge(\"3\", \"8\")",
        "Error in function_list[[i]](value) : \n  could not find function \"set_global_graph_attr\"\n",
        "> ",
        "",
        "> ",
        "render_graph(graph)",
        "Error in match(x, table, nomatch = 0L) : object 'graph' not found\n",
        "> ",
        "graph <-",
        "+ ",
        "  create_graph() %>%",
        "+ ",
        "  set_global_graph_attr(\"graph\", \"rankdir\", \"LR\") %>%",
        "+ ",
        "  add_node(\"A\") %>% add_node(\"B\") %>% add_node(\"C\") %>%",
        "+ ",
        "  add_node(\"D\") %>% add_node(\"E\") %>% add_node(\"F\") %>%",
        "+ ",
        "  add_node(\"1\") %>% add_node(\"2\") %>% add_node(\"3\") %>%",
        "+ ",
        "  add_node(\"4\") %>% add_node(\"5\") %>% add_node(\"6\") %>%",
        "+ ",
        "  add_node(\"7\") %>% add_node(\"8\") %>%",
        "+ ",
        "  add_edge(\"A\", \"1\") %>%",
        "+ ",
        "  add_edge(\"B\", \"2\") %>%",
        "+ ",
        "  add_edge(\"B\", \"3\") %>%",
        "+ ",
        "  add_edge(\"B\", \"4\") %>%",
        "+ ",
        "  add_edge(\"C\", \"A\") %>%",
        "+ ",
        "  add_edge(\"1\", \"D\") %>%",
        "+ ",
        "  add_edge(\"E\", \"A\") %>%",
        "+ ",
        "  add_edge(\"2\", \"4\") %>%",
        "+ ",
        "  add_edge(\"1\", \"5\") %>%",
        "+ ",
        "  add_edge(\"1\", \"F\") %>%",
        "+ ",
        "  add_edge(\"E\", \"6\") %>%",
        "+ ",
        "  add_edge(\"4\", \"6\") %>%",
        "+ ",
        "  add_edge(\"5\", \"7\") %>%",
        "+ ",
        "  add_edge(\"6\", \"7\") %>%",
        "+ ",
        "  add_edge(\"3\", \"8\")",
        "Error in function_list[[i]](value) : \n  could not find function \"set_global_graph_attr\"\n",
        "> ",
        "devtools::install_github(\"rich-iannone/DiagrammeR\")",
        "Downloading GitHub repo rich-iannone/DiagrammeR@master\nfrom URL https://api.github.com/repos/rich-iannone/DiagrammeR/zipball/master\n",
        "Installing DiagrammeR\n",
        "Installing 1 package: tidyr\n",
        "Installing package into ‘C:/Users/adam_/Documents/R/win-library/3.3’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/tidyr_0.6.1.zip'\n",
        "Content type 'application/zip'",
        " length 852653 bytes (832 KB)\n",
        "downloaded 832 KB\n\n",
        "package ‘tidyr’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\adam_\\AppData\\Local\\Temp\\RtmpaGG0n7\\downloaded_packages\n",
        "\"C:/PROGRA~1/R/R-33~1.1/bin/x64/R\" --no-site-file --no-environ --no-save --no-restore --quiet CMD INSTALL  \\\n  \"C:/Users/adam_/AppData/Local/Temp/RtmpaGG0n7/devtools425046103fb9/rich-iannone-DiagrammeR-b612e3c\"  \\\n  --library=\"C:/Users/adam_/Documents/R/win-library/3.3\" --install-tests \n",
        "\n",
        "* installing *source* package 'DiagrammeR' ...\n** R\n** inst\n** tests\n** preparing package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded\n*** arch - i386\n*** arch - x64\n* DONE (DiagrammeR)\n",
        "Reloading installed DiagrammeR\n",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "library(magrittr)",
        "> ",
        "",
        "> ",
        "# Create a graph",
        "> ",
        "graph <-",
        "+ ",
        "  create_graph() %>%",
        "+ ",
        "  set_global_graph_attr(\"graph\", \"rankdir\", \"LR\") %>%",
        "+ ",
        "  add_node(\"A\") %>% add_node(\"B\") %>% add_node(\"C\") %>%",
        "+ ",
        "  add_node(\"D\") %>% add_node(\"E\") %>% add_node(\"F\") %>%",
        "+ ",
        "  add_node(\"1\") %>% add_node(\"2\") %>% add_node(\"3\") %>%",
        "+ ",
        "  add_node(\"4\") %>% add_node(\"5\") %>% add_node(\"6\") %>%",
        "+ ",
        "  add_node(\"7\") %>% add_node(\"8\") %>%",
        "+ ",
        "  add_edge(\"A\", \"1\") %>%",
        "+ ",
        "  add_edge(\"B\", \"2\") %>%",
        "+ ",
        "  add_edge(\"B\", \"3\") %>%",
        "+ ",
        "  add_edge(\"B\", \"4\") %>%",
        "+ ",
        "  add_edge(\"C\", \"A\") %>%",
        "+ ",
        "  add_edge(\"1\", \"D\") %>%",
        "+ ",
        "  add_edge(\"E\", \"A\") %>%",
        "+ ",
        "  add_edge(\"2\", \"4\") %>%",
        "+ ",
        "  add_edge(\"1\", \"5\") %>%",
        "+ ",
        "  add_edge(\"1\", \"F\") %>%",
        "+ ",
        "  add_edge(\"E\", \"6\") %>%",
        "+ ",
        "  add_edge(\"4\", \"6\") %>%",
        "+ ",
        "  add_edge(\"5\", \"7\") %>%",
        "+ ",
        "  add_edge(\"6\", \"7\") %>%",
        "+ ",
        "  add_edge(\"3\", \"8\")",
        "Error in function_list[[i]](value) : \n  could not find function \"set_global_graph_attr\"\n",
        "> ",
        "",
        "> ",
        "render_graph(graph)",
        "Error in match(x, table, nomatch = 0L) : object 'graph' not found\n",
        "> ",
        "library(DiagrammeR)",
        "> ",
        "mermaid(\"",
        "+ ",
        "graph LR;",
        "+ ",
        "    A-->B;",
        "+ ",
        "    click A callback \"Tooltip for a callback\"",
        "Error: unexpected symbol in:\n\"    A-->B;\n    click A callback \"Tooltip\"\n",
        "> ",
        "    click B \"http://www.github.com\" \"This is a tooltip for a link\"",
        "Error: unexpected symbol in \"    click B\"\n",
        "> ",
        "\")",
        "+ ",
        "library(DiagrammeR)",
        "+ ",
        "mermaid(\"",
        "[1] \")\\nlibrary(DiagrammeR)\\nmermaid(\"\n",
        "> ",
        "graph LR;",
        "Error: unexpected symbol in \"graph LR\"\n",
        "> ",
        "    A-->B;",
        "Error: unexpected '->' in \"    A-->\"\n",
        "> ",
        "    ",
        "> ",
        "\")",
        "+ ",
        "library(DiagrammeR)",
        "+ ",
        "mermaid(\"",
        "[1] \")\\nlibrary(DiagrammeR)\\nmermaid(\"\n",
        "> ",
        "  graph LR",
        "Error: unexpected symbol in \"  graph LR\"\n",
        "> ",
        "    A-->B",
        "Error: unexpected '->' in \"    A-->\"\n",
        "> ",
        "\")",
        "+ ",
        "library(DiagrammeR)",
        "+ ",
        "mermaid(\"",
        "[1] \")\\nlibrary(DiagrammeR)\\nmermaid(\"\n",
        "> ",
        "  graph LR",
        "Error: unexpected symbol in \"  graph LR\"\n",
        "> ",
        "    A-->B",
        "Error: unexpected '->' in \"    A-->\"\n",
        "> ",
        "\")",
        "+ ",
        ")",
        "+ ",
        "))))",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        2,
        2,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        2,
        2,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ]
}